// Generated by IcedCoffeeScript 1.6.3-f
var iced, __iced_k, __iced_k_noop,
  __slice = [].slice;

iced = {
  Deferrals: (function() {
    function _Class(_arg) {
      this.continuation = _arg;
      this.count = 1;
      this.ret = null;
    }

    _Class.prototype._fulfill = function() {
      if (!--this.count) {
        return this.continuation(this.ret);
      }
    };

    _Class.prototype.defer = function(defer_params) {
      var _this = this;
      ++this.count;
      return function() {
        var inner_params, _ref;
        inner_params = 1 <= arguments.length ? __slice.call(arguments, 0) : [];
        if (defer_params != null) {
          if ((_ref = defer_params.assign_fn) != null) {
            _ref.apply(null, inner_params);
          }
        }
        return _this._fulfill();
      };
    };

    return _Class;

  })(),
  findDeferral: function() {
    return null;
  },
  trampoline: function(_fn) {
    return _fn();
  }
};
__iced_k = __iced_k_noop = function() {};

window.api = {};

api.init = function(callback) {
  return callback();
};

window.api.request = function(method, data, callback) {
  var reply, url, ___iced_passed_deferral, __iced_deferrals, __iced_k,
    _this = this;
  __iced_k = __iced_k_noop;
  ___iced_passed_deferral = iced.findDeferral(arguments);
  url = 'http://logic.wartech.pro/' + method;
  (function(__iced_k) {
    __iced_deferrals = new iced.Deferrals(__iced_k, {
      parent: ___iced_passed_deferral,
      filename: "js/all.js",
      funcname: "request"
    });
    $.getJSON(url, data, __iced_deferrals.defer({
      assign_fn: (function() {
        return function() {
          return reply = arguments[0];
        };
      })(),
      lineno: 7
    }));
    __iced_deferrals._fulfill();
  })(function() {
    return callback(reply);
  });
};

window.api.getAllUsers = function(callback) {
  return api.request('get_all_users', {}, callback);
};

window.api.requestFight = function(fight_with, callback) {
  return api.request('request_fight', {
    fight_with: fight_with
  }, callback);
};

window.api.getAllModules = function(callback) {
  return api.request('get_all_modules', {}, callback);
};

window.api.getUserRobot = function(callback) {
  return api.request('get_user_robot', {}, callback);
};

window.api.getUserModules = function(callback) {
  return api.request('get_user_modules', {}, callback);
};

window.api.setModuleToSlot = function(slot_id, module_id, callback) {
  return api.request('set_module_to_slot', {
    slot_id: slot_id,
    module_id: module_id
  }, callback);
};

window.api.isAuthorized = function(callback) {
  return api.request('is_authorized', {}, callback);
};

window.api.login = function(token, provider, callback) {
  return api.request('login', {
    token: token,
    provider: provider
  }, callback);
};

window.auth = {};

auth.login = function() {
  var redirect_uri;
  redirect_uri = 'http://wartech.pro/oauth.php?adapter=vk.com&domain=' + location.host;
  return document.location = 'https://oauth.vk.com/authorize?client_id=3851736&scope=PERMISSIONS&redirect_uri=' + encodeURIComponent(redirect_uri) + '&response_type=code&v=5.0';
};

window.inventory = {};

window.inventory.init = function() {};

window.robot = {};

robot.init = function(callback) {
  var reply, url, ___iced_passed_deferral, __iced_deferrals, __iced_k, _robot,
    _this = this;
  __iced_k = __iced_k_noop;
  ___iced_passed_deferral = iced.findDeferral(arguments);
  (function(__iced_k) {
    __iced_deferrals = new iced.Deferrals(__iced_k, {
      parent: ___iced_passed_deferral,
      filename: "js/all.js",
      funcname: "init"
    });
    api.getUserRobot(__iced_deferrals.defer({
      assign_fn: (function() {
        return function() {
          return _robot = arguments[0];
        };
      })(),
      lineno: 60
    }));
    __iced_deferrals._fulfill();
  })(function() {
    (function(__iced_k) {
      __iced_deferrals = new iced.Deferrals(__iced_k, {
        parent: ___iced_passed_deferral,
        filename: "js/all.js",
        funcname: "init"
      });
      api.getAllModules(__iced_deferrals.defer({
        assign_fn: (function(__slot_1) {
          return function() {
            return __slot_1.allModules = arguments[0];
          };
        })(robot),
        lineno: 61
      }));
      __iced_deferrals._fulfill();
    })(function() {
      (function(__iced_k) {
        __iced_deferrals = new iced.Deferrals(__iced_k, {
          parent: ___iced_passed_deferral,
          filename: "js/all.js",
          funcname: "init"
        });
        api.getUserModules(__iced_deferrals.defer({
          assign_fn: (function(__slot_1) {
            return function() {
              return __slot_1.userModules = arguments[0];
            };
          })(robot),
          lineno: 62
        }));
        __iced_deferrals._fulfill();
      })(function() {
        $.extend(robot, _robot);
        url = 'hull/' + robot.hull_name;
        (function(__iced_k) {
          __iced_deferrals = new iced.Deferrals(__iced_k, {
            parent: ___iced_passed_deferral,
            filename: "js/all.js",
            funcname: "init"
          });
          template.load(url, __iced_deferrals.defer({
            assign_fn: (function() {
              return function() {
                return reply = arguments[0];
              };
            })(),
            lineno: 66
          }));
          __iced_deferrals._fulfill();
        })(function() {
          $('.hull').html(reply).addClass(robot.hull_name);
          return callback(robot);
        });
      });
    });
  });
};

robot.getDressed = function() {
  var module, _i, _len, _ref;
  _ref = robot.userModules;
  for (_i = 0, _len = _ref.length; _i < _len; _i++) {
    module = _ref[_i];
    if (!module.equipped) {
      return;
    }
  }
};

window.template = {};

window.template.load = function(url, callback) {
  var reply, ___iced_passed_deferral, __iced_deferrals, __iced_k,
    _this = this;
  __iced_k = __iced_k_noop;
  ___iced_passed_deferral = iced.findDeferral(arguments);
  url = 'template/' + url + '.html';
  (function(__iced_k) {
    __iced_deferrals = new iced.Deferrals(__iced_k, {
      parent: ___iced_passed_deferral,
      filename: "js/all.js",
      funcname: "load"
    });
    $.get(url, {}, __iced_deferrals.defer({
      assign_fn: (function() {
        return function() {
          return reply = arguments[0];
        };
      })(),
      lineno: 79
    }));
    __iced_deferrals._fulfill();
  })(function() {
    return callback(reply);
  });
};
